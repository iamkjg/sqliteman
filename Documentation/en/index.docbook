<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.2-Based Variant V1.1//EN" "dtd/kdex.dtd" [
  <!-- Define an entity for your application if it is not part of KDE
       CVS -->
  <!ENTITY kmyapplication "<application>Sqliteman</application>">
  <!ENTITY kappname "Sqliteman"><!-- replace kmyapplication here
                                            do *not* replace kappname-->
  <!ENTITY package "kde-module"><!-- kdebase, kdeadmin, etc.  Leave
                                     this unchanged if your
                                     application is not maintained in KDE CVS -->
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % English "INCLUDE"> <!-- ONLY If you are writing non-English
                                     original documentation, change
                                     the language here -->

  <!-- Do not define any other entities; instead, use the entities
       from entities/general.entities and $LANG/user.entities. -->
]>
<!-- kdoctemplate v0.9 January 10 2003
     Changes to comments to clarify entity usage January 10 2003
     Minor update to "Credits and Licenses" section on August 24, 2000
     Removed "Revision history" section on 22 January 2001
     Changed to Installation/Help menu entities 18 October 2001
     Other minor cleanup and changes 18 October 2001
     FPI change and minor changes November 2002 -->

<!--
This template was designed by: David Rugge davidrugge@mindspring.com
with lots of help from: Eric Bischoff ebisch@cybercable.tm.fr
and Frederik Fouvry fouvry@sfs.nphil.uni-tuebingen.de
of the KDE DocBook team.

You may freely use this template for writing any sort of KDE documentation.
If you have any changes or improvements, please let us know.

Remember:
- in XML, the case of the <tags> and attributes is relevant ;
- also, quote all attributes.

Please don't forget to remove all these comments in your final documentation,
thanks ;-).
-->

<!-- ................................................................ -->

<!-- The language must NOT be changed here. -->
<!-- If you are writing original documentation in a language other -->
<!-- than English, change the language above ONLY, not here -->
<book lang="&language;">

<!-- This header contains all of the meta-information for the document such
as Authors, publish date, the abstract, and Keywords -->

<bookinfo>
<title>The &kmyapplication; Handbook</title>

<authorgroup>
<author>
<!-- This is just put in as an example.  For real documentation, please
     define a general entity in entities/contributor.entities, e.g.
<!ENTITY George.N.Ugnacious "<personname><firstname>George</firstname><othername>N.</othername><surname>Ugnacious</surname></personname>">
<!ENTITY George.N.Ugnacious.mail "<email>gnu@kde.org</email>">
and use `&George.N.Ugnacious; &George.N.Ugnacious.mail;' in the author element.
 -->
<personname>
<firstname>Petr</firstname>
<!--<othername></othername>-->
<surname>Vanek</surname>
</personname>
<email>petr@scribus.info</email>
</author>
</authorgroup>

<!-- TRANS:ROLES_OF_TRANSLATORS -->

<copyright>
<year>2007</year>
<holder>Petr Vanek</holder>
</copyright>
<!-- Translators: put here the copyright notice of the translation -->
<!-- Put here the FDL notice.  Read the explanation in fdl-notice.docbook
     and in the FDL itself on how to use it. -->
<legalnotice>&FDLNotice;</legalnotice>

<!-- Date and version information of the documentation
Don't forget to include this last date and this last revision number, we
need them for translation coordination !
Please respect the format of the date (YYYY-MM-DD) and of the version
(V.MM.LL), it could be used by automation scripts.
Do NOT change these in the translation. -->

<date>2007-12-12</date>
<releaseinfo>1.1</releaseinfo>

<!-- Abstract about this handbook -->

<abstract>
<para>
&kmyapplication; is the best developer's and/or admin's GUI tool for
Sqlite3 in the world. No joking here (or just a bit only) &ndash; it contains
the most complette feature set of all tools available.
</para>
</abstract>

<!-- This is a set of Keywords for indexing by search engines.
Please at least include KDE, the KDE package it is in, the name
 of your application, and a few relevant keywords. -->

<keywordset>
<keyword>Sqliteman</keyword>
<keyword>SQL</keyword>
<keyword>Sqlite</keyword>
<keyword>development</keyword>
<keyword>database</keyword>
</keywordset>

</bookinfo>

<!-- The contents of the documentation begin here.  Label
each chapter so with the id attribute. This is necessary for two reasons: it
allows you to easily reference the chapter from other chapters of your
document, and if there is no ID, the name of the generated HTML files will vary
from time to time making it hard to manage for maintainers and for the CVS
system. Any chapter labelled (OPTIONAL) may be left out at the author's
discretion. Other chapters should not be left out in order to maintain a
consistent documentation style across all KDE apps. -->

<chapter id="introduction">
<title>Introduction</title>

<!-- The introduction chapter contains a brief introduction for the
application that explains what it does and where to report
problems. Basically a long version of the abstract.  Don't include a
revision history. (see installation appendix comment) -->

<para>
The best developer's and/or admin's GUI tool for
<ulink url="http://sqlite.org/">Sqlite3</ulink>in the world.
No joking here (or just a bit only) &ndash; it contains
the most complette feature set of all tools available.
And it's just the beginning&hellip;
</para>

<para>
The ideal user of this application is a software developer
forced to use <ulink url="http://sqlite.org/">Sqlite3</ulink>
database in his code.
</para>

<para>
If you are looking for a tool for tuning SQL statements,
manage tables, views, or triggers, administrate the database
space and index statistics &ndash; then &kmyapplication; is
the perfect choice.
</para>

<para>
If you are looking for a graphical queries creation wizards,
user interface designers for your database, or an universal
report tool &ndash; try the applications designed for tasks
such this (<ulink url="http://www.kexi-project.org/">Kexi</ulink>,
<ulink url="http://www.knoda.org/">knoda</ulink>).
</para>

<para>
&kmyapplication; is a Qt4 based GPLv2 application.
</para>

<sect1 id="online">
<title>&kmyapplication; Online</title>

<itemizedlist>
<listitem><para><ulink url="http://sqliteman.com/">Project Homepage</ulink></para></listitem>
<listitem><para><ulink url="http://sourceforge.net/project/showfiles.php?group_id=189610">Download new versions</ulink></para></listitem>
<listitem><para><ulink url="http://sqliteman.com/bugtracker/">Report bugs and feature requests</ulink></para></listitem>
<listitem><para><ulink url="https://sourceforge.net/projects/sqliteman/">Sourceforge.net Area</ulink></para></listitem>
</itemizedlist>

</sect1>
</chapter>


<chapter id="sqlite-specs">
<title>Sqlite Specific Issues</title>

<para>
The text in this chapter is take from
<ulink url="http://www.sqlite.org/">Sqlite homepage</ulink>.
Read more documentation there for deeper understanding of Sqlite
features.
</para>

<para>
SQLite is a small C library that implements a self-contained, embeddable,
zero-configuration SQL database engine.
</para>

<caution>
<para>
It's strongly recomended to read and understand the Sqlite
documentation. Sqlite can be confusing for a programmer from the world
of the <emphasis>real databases</emphasis> (like Postgresql, Oracle,
MS SQL Server etc.).
</para>
</caution>

<para>Features include:</para>

<itemizedlist>
<listitem><para>Transactions are atomic, consistent, isolated, and durable (ACID)
    even after system crashes and power failures.</para></listitem>
<listitem><para>Zero-configuration - no setup or administration needed.</para></listitem>
<listitem><para>Implements most of SQL92.
    (<ulink url="http://www.sqlite.org/omitted.html">Features not supported</ulink>)</para></listitem>
<listitem><para>A complete database is stored in a single disk file.</para></listitem>
<listitem><para>Database files can be freely shared between machines with
    different byte orders.</para></listitem>
<listitem><para>Supports databases up to 2 tebibytes in size.</para></listitem>
<listitem><para>Strings and BLOBs up to 2 gibibytes in size.</para></listitem>
<listitem><para>Small code footprint: less than 250KiB fully configured or less
    than 150KiB with optional features omitted.</para></listitem>
<listitem><para><ulink url="http://www.sqlite.org/speed.html">Faster</ulink> than popular client/server database
    engines for most common operations.</para></listitem>
<listitem><para>Simple, easy to use <ulink url="http://www.sqlite.org/capi3.html">API</ulink>.</para></listitem>
<listitem><para><ulink url="http://www.sqlite.org/tclsqlite.html">TCL bindings</ulink> included.
    Bindings for many other languages 
    <ulink url="http://www.sqlite.org/cvstrac/wiki?p=SqliteWrappers">available separately.</ulink></para></listitem>
<listitem><para>Well-commented source code with over 95% test coverage.</para></listitem>
<listitem><para>Self-contained: no external dependencies.</para></listitem>
<listitem><para>Sources are in the <ulink url="http://www.sqlite.org/copyright.html">public domain</ulink>.
    Use for any purpose.</para></listitem>
</itemizedlist>

<para>
Sqlite specific properties affect &kmyapplication; feature set. E.g.
Sqlite does not support foreign keys so there is a dedicated dialog
for FK triggers creating.
</para>

</chapter>

<!-- This chapter should tell the user how to use your app. You should use as
many sections (Chapter, Sect1, Sect3, etc...) as is necessary to fully document
your application. -->


<!-- Note that all graphics should be in .png format. Use no gifs because of
patent issues. -->
<!--
<screenshot>
<screeninfo>Here's a screenshot of &kmyapplication;</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="screenshot.png" format="PNG"/>
	  </imageobject>
	  <imageobject>
	    <imagedata fileref="screenshot.eps" format="EPS"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
</para>


<sect1 id="kapp-features">
<title>More &kmyapplication; features</title>

<para>It slices! It dices! and it comes with a free toaster!</para>
<para>
The Squiggle Tool <guiicon><inlinemediaobject>
	  <imageobject>
	    <imagedata fileref="squiggle.png" format="PNG"/>
	  </imageobject>
	  <imageobject>
	    <imagedata fileref="squiggle.eps" format="EPS"/>
	  </imageobject>
	  <textobject>
	    <phrase>Squiggle</phrase>
	  </textobject>
</inlinemediaobject></guiicon> is used to draw squiggly lines all over
the &kmyapplication; main window. It's not a bug, it's a feature!
</para>

</sect1>
</chapter> -->


<chapter id="start-app">
<title>Start the Application</title>

<para>The most common way how to start &kmyapplication; is
to run it from your desktop menu. But there are some
command line options you can use too.
</para>

<sect1 id="cli-usage">
<title>Usage in command line</title>
<para>
<command>sqliteman [options] [databasefile]</command>
</para>


<sect2 id="databasefile">
<title>databasefile</title>
<para>
An optional argument. A Sqlite3 file with absolute or relative path.
This file will be loaded into the application directly.
</para>
</sect2>

<sect2 id="options">
<title>options</title>
<para>
Optional arguments. You can specify some switches to setup
the application. Option list:
</para>

<itemizedlist>

<listitem><para>
<command>--help</command> or <command>-h</command> displays small help and exits
</para></listitem>

<listitem><para>
<command>--version</command> or <command>-v</command> prints version and exits
</para></listitem>

<listitem><para>
<command>--lang</command> or <command>-l</command> sets a GUI language.
E.g. : <command>sqliteman --lang cs</command>
</para>
<para>
&kmyapplication; checks your environment and tries to setup iself
by your locale settings. It affects the GUI language &ndash; it should be in your
language if there is a translation available. If you wish to use this application
in English use <command>--lang en</command> or use Preferences dialog.
</para>
</listitem>

<listitem><para>
<command>--langs</command> or <command>-la</command> lists available languages and exits
</para></listitem>
</itemizedlist>

<para>There are standard Qt4 options available too.</para>

</sect2>

</sect1>

</chapter>



<chapter id="overview">
<title>The First Overview</title>

<para>
<screenshot>
<screeninfo>The main window of &kmyapplication;</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="mainwindow.png" format="PNG"/>
	  </imageobject>
	  <imageobject>
	    <imagedata fileref="mainwindow.eps" format="EPS"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot of the Main Window</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
</para>

<para>
You can see the &kmyapplication; user interface is quite simillar to
classic database admin/developer tools. The main window contains
<emphasis>Object Browser</emphasis>, <emphasis>SQL Editor</emphasis>,
<emphasis>Data Result Grid</emphasis>, and many more &ndash; tools
for Sqlite special features.
</para>

<para>All interface elements contains so called "tooltips" &ndash; quick
notes which are available when you stay with a mouse cursor in the element
are for a while.</para>

</chapter>


<chapter id="mainwindow">
<title>&kmyapplication; Main Window</title>


<itemizedlist>
<listitem><para>
Menu bar. Most of the actions are started here.
</para></listitem>

<listitem><para>
Object tree. Database objects are stored in the
    logical hierarchy here. "Main" is the
    core database (opened), all others databases can be
    "attached" only.
</para></listitem>

<listitem><para>
SQL editor. Write your queries and the others commands here.
</para></listitem>

<listitem><para>
Result table. All queries results and related stuff is shown here.
</para></listitem>

<listitem><para>
Error log. Error messages and status is written here.
</para></listitem>
</itemizedlist>


<!-- (OPTIONAL, BUT RECOMMENDED) This chapter should list all of the
application windows and their menubar and toolbar commands for easy reference.
Also include any keys that have a special function but have no equivalent in the
menus or toolbars. This may not be necessary for small apps or apps with no tool
or menu bars. -->

<sect1 id="mainwindow-menu">
<title>&kmyapplication; Menu Structure</title>

<sect2>
<title>The <guimenu>File</guimenu> Menu</title>
<para>
You can open your database files here.
</para>
<para>
Sqliteman can handle files created by Sqlite version 3. If you are using 2.x, you should migrate your data. Sqlite developers change physical data format for its files quite often (in the 3.x releases too) so there can be some tweaky issues when you cannot e.g. open a 3.3.13 file with 3.3.8 driver etc. See troubleshooting chapter for more info.
</para>

<para>
<variablelist>
  <varlistentry>
    <term><menuchoice>
    <shortcut><keycombo action="simul">&Ctrl;<keycap>N</keycap></keycombo></shortcut>
    <guimenu>File</guimenu>
    <guimenuitem>New...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Create a new database file.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <shortcut><keycombo action="simul">&Ctrl;<keycap>O</keycap></keycombo></shortcut>
    <guimenu>File</guimenu>
    <guimenuitem>Open...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Open an existing file.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <guimenu>File</guimenu>
    <guimenuitem>Recent Databases</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>If you have been using Sqliteman before, you can
                            see previously opened database files here. Use
                            this sub-menu for a quick access to these DBs.
              </action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <guimenu>File</guimenu>
    <guimenuitem>Preferences...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Opens the preferences dialog.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <guimenu>File</guimenu>
    <guimenuitem>Exit</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Quit the application.</action></para></listitem>
  </varlistentry>

</variablelist>
</para>

</sect2>

<sect2 id="content-menu">
<title>The <guimenu>Context</guimenu> Menu</title>
<para>The "Context" is the set of operation you can use for
the selected object in the object tree browser. You can use
the alternative access to this menu by the right mouse button
(for right handed mouse).</para>
<para>Not all operations are available for all database objects.</para>

<para>
<!--<variablelist>

</variablelist>-->
</para>
</sect2>


<sect2 id="database-menu">
<title>The <guimenu>Database</guimenu> Menu</title>
<para>Frequently used database tasks are grouped in this menu.</para>
<para>
<variablelist>

  <varlistentry>
    <term><menuchoice>
    <shortcut><keycombo action="simul">&Ctrl;<keycap>T</keycap></keycombo></shortcut>
    <guimenu>Database</guimenu>
    <guimenuitem>Create Table...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>The same as in the Context menu</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <shortcut><keycombo action="simul">&Ctrl;<keycap>G</keycap></keycombo></shortcut>
    <guimenu>Database</guimenu>
    <guimenuitem>Create View...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>The same as in the Context menu</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <shortcut><keycombo action="simul">&Ctrl;<keycap>R</keycap></keycombo></shortcut>
    <guimenu>Database</guimenu>
    <guimenuitem>Build Query...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Simple and quick (and limited a bit) graphical query builder.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <shortcut><keycombo action="simul">&Ctrl;<keycap>E</keycap></keycombo></shortcut>
    <guimenu>Database</guimenu>
    <guimenuitem>SQL Editor</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Switch On/Off the SQL text editor in the main window.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <shortcut><keycombo action="simul">&Ctrl;<keycap>B</keycap></keycombo></shortcut>
    <guimenu>Database</guimenu>
    <guimenuitem>Object Browser</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Switch On/Off the Object Browser tree in the main window.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <guimenu>Database</guimenu>
    <guimenuitem>Export Schema...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Export only structure of the database. The result is only
                  "create database" script.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <guimenu>Database</guimenu>
    <guimenuitem>Dump Database...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Export structure and data of the database. The result is the
                  "create database" script and data inserts too.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <guimenu>Database</guimenu>
    <guimenuitem>Import Table Data...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Import data into specified table. The import dialog with guided
                steps is shown.</action></para></listitem>
  </varlistentry>

</variablelist>
</para>

</sect2>


<sect2 id="system-menu">
<title>The <guimenu>System</guimenu> Menu</title>
<para>Less used but still usefull database tasks are grouped in this menu.</para>
<caution><para>All actions introduced here requires deep understanding
of the Sqlite internals &ndash; study its documentation, please.</para></caution>

<para>
<variablelist>
  <varlistentry>
    <term><menuchoice>
    <guimenu>System</guimenu>
    <guimenuitem>Analyze Statistics...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Raise a dialog to compute the database statistics.
          You can drop, compute stats for the whole schema, or just
          select objects.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <guimenu>System</guimenu>
    <guimenuitem>Vacuum...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Raise a dialog to handle free space in the database file.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <guimenu>System</guimenu>
    <guimenuitem>Attach Database...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>You can join another Sqlite database file into this session.
                You'll be able to use new objects in your selects etc.
                Use schema prefix then.</action></para></listitem>
  </varlistentry>
</variablelist>
</para>

</sect2>


<sect2 id="help-menu">
<title>The <guimenu>Help</guimenu> Menu</title>

<para>
<variablelist>
  <varlistentry>
    <term><menuchoice>
    <shortcut><keycap>F1</keycap></shortcut>
    <guimenu>Help</guimenu>
    <guimenuitem>Help Content...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Open help window with &kmyapplication; documentation.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <shortcut><keycap>F1</keycap></shortcut>
    <guimenu>Help</guimenu>
    <guimenuitem>About...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Small dialog with &kmyapplication; version and credits.</action></para></listitem>
  </varlistentry>

  <varlistentry>
    <term><menuchoice>
    <shortcut><keycap>F1</keycap></shortcut>
    <guimenu>Help</guimenu>
    <guimenuitem>About Qt...</guimenuitem>
    </menuchoice></term>
    <listitem><para><action>Small dialog with Qt4 library version and credits.</action></para></listitem>
  </varlistentry>

</variablelist>
</para>

</sect2>

</sect1>
</chapter>

<chapter id="developers">
<title>Developer's Guide to &kmyapplication;</title>

<!-- (OPTIONAL) A Programming/Scripting reference chapter should be
used for apps that use plugins or that provide their own scripting hooks
and/or development libraries. -->

<para>
Programming &kmyapplication; plugins is a joy to behold. Just read through the next
66 pages of API's to learn how!
</para>

<!-- Use refentries to describe APIs.  Refentries are fairly complicated and you
should consult the docbook reference for further details. The example below was
taken from that reference and shortened a bit for readability. -->

<refentry id="re-1007-unmanagechildren-1">
<refmeta>
<refentrytitle>XtUnmanageChildren</refentrytitle>
<refmiscinfo>Xt - Geometry Management</refmiscinfo>
</refmeta>
<refnamediv>
<refname>XtUnmanageChildren
</refname>
<refpurpose>remove a list of children from a parent widget's managed
list.
<indexterm id="ix-1007-unmanagechildren-1"><primary>widgets</primary><secondary>removing</secondary></indexterm>
<indexterm id="ix-1007-unmanagechildren-2"><primary>XtUnmanageChildren</primary></indexterm>
</refpurpose>

</refnamediv>
<refsynopsisdiv>
<refsynopsisdivinfo>
<date>4 March 1996</date>
</refsynopsisdivinfo>
<synopsis>
void XtUnmanageChildren(<replaceable class="parameter">children</replaceable>, <replaceable class="parameter">num_children</replaceable>)
    WidgetList <replaceable class="parameter">children</replaceable>;
    Cardinal <replaceable class="parameter">num_children</replaceable>;
</synopsis>

<refsect2 id="r2-1007-unmanagechildren-1">
<title>Inputs</title>
<variablelist>
<varlistentry>
<term><replaceable class="parameter">children</replaceable>
</term>
<listitem>
<para>Specifies an array of child widgets. Each child must be of
class RectObj or any subclass thereof.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><replaceable class="parameter">num_children</replaceable>
</term>
<listitem>
<para>Specifies the number of elements in <replaceable class="parameter">children</replaceable>.
</para>
</listitem>
</varlistentry>
</variablelist>
</refsect2></refsynopsisdiv>

<refsect1 id="r1-1007-unmanagechildren-1">
<title>Description
</title>
<para><function>XtUnmanageChildren()</function> unmaps the specified widgets
and removes them from their parent's geometry management.
The widgets will disappear from the screen, and (depending
on its parent) may no longer have screen space allocated for
them.
</para>
<para>Each of the widgets in the <replaceable class="parameter">children</replaceable> array must have
the same parent.
</para>
<para>See the &ldquo;Algorithm&rdquo; section below for full details of the
widget unmanagement procedure.
</para>
</refsect1>

<refsect1 id="r1-1007-unmanagechildren-2">
<title>Usage</title>
<para>Unmanaging widgets is the usual method for temporarily
making them invisible.  They can be re-managed with
<function>XtManageChildren()</function>.
</para>
<para>You can unmap a widget, but leave it under geometry
management by calling <function>XtUnmapWidget()</function>.  You can
destroy a widget's window without destroying the widget by
calling <function>XtUnrealizeWidget()</function>.  You can destroy a
widget completely with <function>XtDestroyWidget()</function>.
</para>
<para>If you are only going to unmanage a single widget, it is
more convenient to call <function>XtUnmanageChild()</function>.  It is
often more convenient to call <function>XtUnmanageChild()</function>
several times than it is to declare and initialize an array
of widgets to pass to <function>XtUnmanageChildren()</function>.  Calling
<function>XtUnmanageChildren()</function> is more efficient, however,
because it only calls the parent's <function>change_managed()</function>
method once.
</para>
</refsect1>

<refsect1 id="r1-1007-unmanagechildren-3">
<title>Algorithm
</title>
<para><function>XtUnmanageChildren()</function> performs the following:
</para>
<variablelist>
<varlistentry>
<term>-
</term>
<listitem>
<para>Ignores the child if it already is unmanaged or is being
destroyed.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>-
</term>
<listitem>
<para>Otherwise, if the child is realized, it makes it nonvisible
by unmapping it.
</para>
</listitem>
</varlistentry>
</variablelist>
<para>
</para>
</refsect1>

<refsect1 id="r1-1007-unmanagechildren-4">
<title>Structures</title>
<para>The <type>WidgetList</type> type is simply an array of widgets:
</para>
<screen id="sc-1007-unmanagechildren-1">typedef Widget *WidgetList;
</screen>
</refsect1>
</refentry>

</chapter>

<chapter id="faq">
<title>Questions and Answers</title>

<!-- (OPTIONAL but recommended) This chapter should include all of the silly
(and not-so-silly) newbie questions that fill up your mailbox. This chapter
should be reserved for BRIEF questions and answers! If one question uses more
than a page or so then it should probably be part of the
"Using this Application" chapter instead. You should use links to
cross-reference questions to the parts of your documentation that answer them.
This is also a great place to provide pointers to other FAQ's if your users
must do some complicated configuration on other programs in order for your
application work. -->

&reporting.bugs;
&updating.documentation;

<qandaset id="faqlist">
<qandaentry>
<question>
<para>My Mouse doesn't work. How do I quit &kmyapplication;?</para>
</question>
<answer>
<para>You silly goose! Check out the <link linkend="overview">Commands
Section</link> for the answer.</para>
</answer>
</qandaentry>
<qandaentry>
<question>
<para>Why can't I twiddle my documents?</para>
</question>
<answer>
<para>You can only twiddle your documents if you have the foobar.lib
installed.</para>
</answer>
</qandaentry>
</qandaset>
</chapter>

<chapter id="credits">

<!-- Include credits for the programmers, documentation writers, and
contributors here. The license for your software should then be included below
the credits with a reference to the appropriate license file included in the KDE
distribution. -->

<title>Credits and License</title>

<para>
&kmyapplication;
</para>
<para>
Program copyright 1997 John Q. Hacker <email>jqh@kde.org</email>
</para>
<para>
Contributors:
<itemizedlist>
<listitem><para>Konqui the KDE Dragon <email>konqui@kde.org</email></para>
</listitem>
<listitem><para>Tux the Linux Penguin <email>tux@linux.org</email></para>
</listitem>
</itemizedlist>
</para>

<para>
Documentation Copyright &copy; 1999 George N. Ugnacious <email>gnu@kde.org</email>
</para>

<!-- TRANS:CREDIT_FOR_TRANSLATORS -->

&underFDL;               <!-- FDL: do not remove -->

<!-- Determine which license your application is licensed under,
     and delete all the remaining licenses below:

     (NOTE:  All documentation are licensed under the FDL,
     regardless of what license the application uses) -->

&underGPL;        	 <!-- GPL License -->
&underBSDLicense;        <!-- BSD License -->
&underArtisticLicense;   <!-- BSD Artistic License -->
&underX11License;        <!-- X11 License  -->

</chapter>

<appendix id="installation">
<title>Installation</title>

<sect1 id="getting-kapp">
<title>How to obtain &kmyapplication;</title>

<!-- This first entity contains boiler plate for applications that are
part of KDE CVS.  You should remove it if you are releasing your
application -->

&install.intro.documentation;

</sect1>

<sect1 id="requirements">
<title>Requirements</title>

<!--
List any special requirements for your application here. This should include:
.Libraries or other software that is not included in kdesupport,
kdelibs, or kdebase.
.Hardware requirements like amount of RAM, disk space, graphics card
capabilities, screen resolution, special expansion cards, etc.
.Operating systems the app will run on. If your app is designed only for a
specific OS, (you wrote a graphical LILO configurator for example) put this
information here.
-->

<para>
In order to successfully use &kmyapplication;, you need &kde; 1.1. Foobar.lib is
required in order to support the advanced &kmyapplication; features. &kmyapplication; uses
about 5 megs of memory to run, but this may vary depending on your
platform and configuration.
</para>

<para>
All required libraries as well as &kmyapplication; itself can be found
on <ulink url="ftp://ftp.kapp.org">The &kmyapplication; home page</ulink>.
</para>

<!-- For a list of updates, you may refer to the application web site
or the ChangeLog file, or ... -->
<para>
You can find a list of changes at <ulink
url="http://apps.kde.org/kapp">http://apps.kde.org/kapp</ulink>.
</para>
</sect1>

<sect1 id="compilation">
<title>Compilation and Installation</title>

<!-- This entity contains the boilerplate text for standard -->
<!-- compilation instructions.  If your application requires any -->
<!-- special handling, remove it, and replace with your own text. -->

&install.compile.documentation;

</sect1>

<sect1 id="configuration">
<title>Configuration</title>

<para>Don't forget to tell your system to start the <filename>dtd</filename>
dicer-toaster daemon first, or &kmyapplication; won't work !</para>

</sect1>

</appendix>

&documentation.index;
</book>

<!--
Local Variables:
mode: xml
sgml-minimize-attributes:nil
sgml-general-insert-case:lower
sgml-indent-step:0
sgml-indent-data:nil
End:

vim:tabstop=2:shiftwidth=2:expandtab
kate: space-indent on; indent-width 2; tab-width 2; indent-mode none;
-->
